name: Test

on:
  # Run on pushes to `master` and on all pull requests.
  # Prevent the "push" build from running when there are only irrelevant changes.
  push:
    branches:
      - master
    paths-ignore:
      - '**.md'
  pull_request:

  # Allow manually triggering the workflow.
  workflow_dispatch:

# Cancels all previous workflow runs for the same branch that have not yet completed.
concurrency:
  # The concurrency group contains the workflow name and the branch name.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  checkxml:
    name: 'Check XML Validates'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install xmllint
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends -y libxml2-utils

      # Show XML violations inline in the file diff.
      # @link https://github.com/marketplace/actions/xmllint-problem-matcher
      - uses: korelstar/xmllint-problem-matcher@v1

      - name: 'Validate XML against schema and check code style'
        run: ./bin/xml-lint

  test:
    runs-on: ubuntu-latest

    strategy:
      # Keys:
      # - php: The PHP versions to test against.
      # - dependencies: The PHPCS dependencies versions to test against.
      #   IMPORTANT: test runs shouldn't fail because of PHPCS being incompatible with a PHP version.
      #   - PHPCS will run without errors on PHP 5.4 - 7.4 on any supported version.
      #   - PHP 8.0 needs PHPCS 3.5.7+ to run without errors, and we require a higher minimum version.
      #   - PHP 8.1 needs PHPCS 3.6.1+ to run without errors, but works best with 3.7.1+, and we require at least this minimum version.
      matrix:
        php: ['7.1', '7.2', '7.3', '7.4', '8.0', '8.1', '8.2']
        dependencies: ['lowest', 'stable']
    name: "Test: PHP ${{ matrix.php }} - PHPCS"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # With stable PHPCS dependencies, allow for PHP deprecation notices.
      # Unit tests don't need to fail on those for stable releases where those issues won't get fixed anymore.
      - name: Setup ini config
        id: set_ini
        run: |
          echo 'PHP_INI=error_reporting=E_ALL & ~E_DEPRECATED, display_errors=On' >> $GITHUB_OUTPUT

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          ini-values: ${{ steps.set_ini.outputs.PHP_INI }}
          coverage: none

      # Install dependencies and handle caching in one go.
      # @link https://github.com/marketplace/actions/install-composer-dependencies
      - name: Install Composer dependencies - normal
        if: ${{ startsWith( matrix.php, '8' ) == false }}
        uses: "ramsey/composer-install@v2"
        with:
          # Bust the cache at least once a month - output format: YYYY-MM.
          custom-cache-suffix: $(date -u "+%Y-%m")

      # PHPUnit 7.x does not allow for installation on PHP 8, so ignore platform
      # requirements to get PHPUnit 7.x to install on nightly.
      - name: Install Composer dependencies - with ignore platform
        if: ${{ startsWith( matrix.php, '8' ) }}
        uses: "ramsey/composer-install@v2"
        with:
          composer-options: --ignore-platform-req=php+
          custom-cache-suffix: $(date -u "+%Y-%m")

      - name: "Composer: downgrade PHPCS dependencies for tests (lowest)"
        if: ${{ ! startsWith( matrix.php, '8' ) && matrix.dependencies == 'lowest' }}
        run: >
          composer update --prefer-lowest --no-scripts --no-interaction
          squizlabs/php_codesniffer
          phpcsstandards/phpcsutils
          phpcsstandards/phpcsextra
          sirbrillig/phpcs-variable-analysis
          wp-coding-standards/wpcs

      - name: "Composer: downgrade PHPCS dependencies for tests (lowest) - with ignore platform"
        if: ${{ startsWith( matrix.php, '8' ) && matrix.dependencies == 'lowest' }}
        run: >
          composer update --prefer-lowest --no-scripts --no-interaction --ignore-platform-req=php+
          squizlabs/php_codesniffer
          phpcsstandards/phpcsutils
          phpcsstandards/phpcsextra
          sirbrillig/phpcs-variable-analysis
          wp-coding-standards/wpcs

      - name: Run the ruleset tests
        run: ./bin/ruleset-tests
